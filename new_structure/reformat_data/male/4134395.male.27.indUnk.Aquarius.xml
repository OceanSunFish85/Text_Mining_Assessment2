<?xml version="1.0" encoding="utf-8"?>
<Blog>
<date>21,August,2004</date>
<post>

    
         Don't you hate it when a program just reboots Windows without asking after an installation? I do.    Today I found a little program on the web that will prevent this shutdown. It's called Anti-Shutdown by   urlLink xCAT-Industries  . The program itself can be downloaded from   urlLink http://www.xcat-industries.nl/softwareinfo.php?software=37 .       
    
    
</post>
<date>19,August,2004</date>
<post>

    
        If you try to find files containing a specific string, the search of Windows 2003 doesn't look in all filetypes. Just try to search for a &lt;Title&gt;-tag in HTML-files...      Good thing there's a quick solution to this:   - Open  RegEdit  - Find the key  HKLM\SYSTEM\CurrentControlSet\Control\ContentIndex  - Set the DWORD-value of  FilterFilesWithUnknownExtensions  to  1  (default = 0)      Searching will be slower, but at least you'll get some results!      This should work for Windows XP also.   
    
    
</post>
<date>17,August,2004</date>
<post>

    
        When you are editing a posting in Microsoft Content Management Server, your stylesheet is not applied to the placeholders. Most users find this unacceptable.  So I was looking for an easy and quick way to change the font-family and the font-size for all the placeholders.  I wrote a generic function I could use on all templates:     Imports Microsoft.ContentManagement.Publishing Public Class kHSw Public Shared Function BuildCSSScript(ByVal pPosting As Posting) As String Dim pStringBuilder As New System.Text.StringBuilder Dim sClassName As String = ConfigurationSettings.AppSettings("PlaceholderClassName") pStringBuilder.Append("&lt;script&gt;") For Each pPlaceholder As Placeholder In pPosting.Placeholders pStringBuilder.Append("window.document.forms[0].NCPHRICH_"  pPlaceholder.Name  ".className = '"  sClassName amp;amp;amp;amp; "';") Next pStringBuilder.Append("/script") Return pStringBuilder.ToString() End Function End Class    We call this function on every template in the Page_Load:    If kHSw.PostingIsInEditMode Then RegisterStartupScript("SetClass", VBI.BuildCSSScript(ThisPosting)) End If    Where PostingIsInEditMode is definied as:    Imports Microsoft.ContentManagement.Publishing Imports Microsoft.ContentManagement.WebControls  Public Class kHSw Public Shared Function PostingIsInEditMode() As Boolean If CmsHttpContext.Current.Mode = PublishingMode.Unpublished And WebAuthorContext.Current.Mode = WebAuthorContextMode.AuthoringReedit Or WebAuthorContext.Current.Mode = WebAuthorContextMode.AuthoringNew) Then Return True Else Return False End If End Function End Class    Now you can add the class for your placeholders to your stylesheet (the name of that class should be the value of PlaceholderClassName in the appSettings-section in the web.config).    Thanks to   urlLink Dirk Dooms   for pointing out a bug in the previously published code.    
    
    
</post>
<date>13,August,2004</date>
<post>

    
        A few days ago, a customer called because an ASP.NET application we wrote failed with the errormessage:  "Access denied to 'x:\xxxxxxx\xxxx\xxx\xxxx.aspx'. Failed to start monitoring file changes."  That application had been running for months without errors.  We did a lot of searches, most of them pointing to:   urlLink http://support.microsoft.com/default.aspx?scid=kb;en-us;Q317955   and   urlLink http://support.microsoft.com/default.aspx?kbid=316721    But the problem persisted. Totally clueless I decided to do a last search... and I found this:   urlLink http://support.microsoft.com/default.aspx?scid=kb;en-us;824308   Nice bug ;-)   
    
    
</post>
<date>10,August,2004</date>
<post>

    
        When opening a web-project from Visual Sourcesafe 6.0d in Visual Studio .NET 2003 we sometimes get this error:  "The project you are attempting to open is a source controlled FrontPage Web and cannot be opened directly from source control. Please use the Open Project From Web command instead."  If we look at IIS, we see that the VS.NET created only a virtual directory instead of a virtual application. Google was no help at all, but it looks like we've found a working solution:  - Delete that virtual directory in IIS - Reload the project from Sourcesafe - Continue until you get the 'Set Project Location' dialog box - Go to the IIS Manager and create the virtual application(s) you need, pointing to the directory where Sourcesafe will place the files - Go back to Visual Studio .NET and continue as you normally would - Happy programming!    
    
    
</post>
<date>09,August,2004</date>
<post>

    
        I know, most of you guys know how to do this, but for the few who don't:  In many games, like the new Doom III, the console can be reached by pressing the "~" - button. Easy on a Qwerty-keyboard. A lot more difficult if you're using an Azerty-keyboard.  Just press  Ctrl-Alt-Â²  The Â²-button is the button just below Esc (where the ~-button is on a Qwerty-keyboard).  Have fun ;-)    
    
    
</post>
<date>05,August,2004</date>
<post>

    
        We are developing a CMS-website that's being indexed by Sharepoint. If, for instance, a user visits a CMS-posting with a link to a Sharepoint document, a frameset is build and that document is opened within the frameset automatically. The user doesn't have to click on the link to that document. But when Sharepoint is indexing the website, the redirect can't be performed as Sharepoint has to be able to read the meta-tags on that posting. So we had to make an exclusion for Sharepoint. We did some small research and we found out that the User-Agent Sharepoint is using is called "MS Search".  We wrote a little function that we could call to find out if Sharepoint is crawling our CMS-website:    Public Shared Function SharePointIsCrawling() As Boolean Return (Web.HttpContext.Current.Request.UserAgent = "MS Search") End Function    To be able to test this, we adapted the function so that we could pretend to be Sharepoint with a little registry-hack (by replacing the default empty value of "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\5.0\User Agent" to "MS Search"):    Public Shared Function SharePointIsCrawling() As Boolean Return (UCase(Web.HttpContext.Current.Request.UserAgent).IndexOf("MS SEARCH") &gt; -1) End Function    Pretty easy...   
    
    
</post>
<date>05,August,2004</date>
<post>

    
        When a customer gets a messagebox (for example an errormessage), they mostly take a printscreen, copy this bitmap in a Word-document and send it to my already overloaded mailbox. Those customers who do think about my mailbox size, are manually typing the text from the messagebox in an email.  It's much easier to just copy the text of the messagebox to the clipboard by pressing  Ctrl-C.  You'll get something like this (an example coming from the Database Configuration Application of Microsoft Content Management Server):    ---------------------------Stop service?---------------------------In order to continue, the IIS service and all dependent services must be stopped. Do you want to stop IIS now? Answering No will exit this program.---------------------------Yes No ---------------------------    
    
    
</post>
<date>04,August,2004</date>
<post>

    
        If you have to develop websites on a machine running Microsoft Sharepoint on the same port, you always have to go to the Sharepoint Central Administration, browse your way to Define Managed Paths and exclude the path of the Visual Studio .NET project you are going to create.  I've created a little vbs-file, just open it and type the name of the path you want to exclude. Here's the source (just copy it and paste it in a file called Exclude.vbs):    Dim strProjectName strProjectName = Inputbox("Project Name?","")  If strProjectName </post></Blog>