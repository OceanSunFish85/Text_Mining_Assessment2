stacks heaps know always confused area revisit whenever someone come type questions let answer hope help others also answered mostly considering nt platform less applicable os reason simple nt stolen oss go one one questions answers question going thr books encounter one statement strings created heap whats heap gone thr many books search got following idea figured correctly heap would anybody like add anything heap special memory area reserved dyn mem allocation also read one line many times stack n heap grow opposite direction answer right stack heap grows opposite direction stack grows downward top virtual memory area towards program code heap 1mb area virtual memory map process shown direction diagram way round question mentioned heap stacks shared multiple processes process copy heap n memory answer win32 process copy virtual memory please distinguish physical virtual memory clearly pc might 256mb ram friend pc might 128mb run windows application pc 4gb 2gb program virtual memory address available os takes care mapping virtual physical transparently ram sufficient os swap one process code data secondary device hard disk os loads program memory entire 2gb virtual memory available program 1mb area marked heap may grow beyond limit 1mb less sufficient applications allocate memory using operator new c runtime library functions e g malloc calloc os api virtualalloc heapalloc localalloc windows ntand actual physical memory get allocated instead virtual memory get allocated major change os applies bit bit solaris guess could unix linux question use system stack heap operations answer last answer sufficient however information intel microprocessor two distinct modes called ring0 ring3 os runs ring0 along device drivers previlaged mode application runs ring3 question abstract would like whats memory picture runtime u simultaneousy many running processes process dynamically created objects turn object containing pointers answer think finding difficult distinguish physical memory virtual memory virtual memory address could range 4gb upper 2gb used os loading dll user kernel gui dlls please note nt os dll form left 2gb need additional 1gb virtual memory setting linker option 3gb program 1mb os required know exactly setting would straight forward simultaneously running many processes runtime picture memory would different different time process point view process 2gb virtual memory available