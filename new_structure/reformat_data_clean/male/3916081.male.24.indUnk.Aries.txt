super self __class__ self meth soon change combine metaclasses child class get wrong method resolution likely fall infinite recursion see example simplest solution would pass metaclass super explicitly even worse passing class explicitly general case class metaclass located different modules packages etc say contribute code clarity example import metaclass_example class _othermetaclass type def meth cls print metaclass method super try block make method usable class combinations terminated super try super cls __class__ cls meth except attributeerror pass class someusefullclass object __metaclass__ _othermetaclass note inherit two classes different types metaclasses thus creating metaclass conflict resolve conflict need combine metaclasses parent classes class _combinationmetaclass _othermetaclass metaclass_example _metaclass pass innocent looking result class killerclass metaclass_example someotherclass someusefullclass __metaclass__ _combinationmetaclass def meth cls print hi killer super cls __class__ cls meth __name__ __main__ someusefullclass meth killer killerclass print bang killer meth vim set ts sw nowrap metaclass_example_killer py p made little typo module name main post word example lacking p corrected originaly posted